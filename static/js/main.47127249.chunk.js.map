{"version":3,"sources":["components/Filters.tsx","components/Navbar.tsx","components/Companies.tsx","components/Input.tsx","App.tsx","index.tsx"],"names":["Filters","filters","setFilters","className","onClick","is_branch","inactive","company_size","NavBar","target","href","Companies","data","length","map","company","index","name","Input","setWord","placeholder","onChange","e","value","App","useState","Data","companies","setCompanies","filteredData","setFiltered","word","useEffect","filter","changeCompanies","re","RegExp","match","changeFilter","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8LAGaA,EAA4B,SAAC,GAA2B,IAA1BC,EAAyB,EAAzBA,QAASC,EAAgB,EAAhBA,WAChD,OACI,sBAAKC,UAAU,kBAAf,UACI,qBAAKC,QAAS,kBAAMF,EAAW,2BAAID,GAAL,IAAcI,WAAW,MAAvD,yGACA,qBAAKD,QAAS,kBAAMF,EAAW,2BAAID,GAAL,IAAcI,WAAW,MAAvD,wDACA,qBAAKD,QAAS,kBAAMF,EAAW,2BAAID,GAAL,IAAcK,UAAU,MAAtD,gFACA,qBAAKF,QAAS,kBAAMF,EAAW,2BAAID,GAAL,IAAcK,UAAU,MAAtD,4FACA,qBAAKF,QAAS,kBAAMF,EAAW,2BAAID,GAAL,IAAcM,aAAc,YAA1D,2HACA,qBAAKH,QAAS,kBAAMF,EAAW,2BAAID,GAAL,IAAcM,aAAc,aAA1D,yDACA,qBAAKH,QAAS,kBAAMF,EAAW,2BAAID,GAAL,IAAcM,aAAc,YAA1D,iDCVCC,EAAmB,WAC5B,OACA,sBAAKL,UAAU,SAAf,UACE,oBAAGA,UAAU,OAAOM,OAAO,IAAIC,KAAK,KAApC,iBAA6C,8CAC7C,sBAAKP,UAAU,OAAf,UACE,mBAAGA,UAAU,WAAWM,OAAO,IAAIC,KAAK,mCAAxC,wDACA,mBAAGP,UAAU,WAAWM,OAAO,IAAIC,KAAK,6BAAxC,wFCLKC,EAA6B,SAAC,GAAY,IAAXC,EAAU,EAAVA,KAExC,OAAGA,EAAKC,OAAS,EAEN,oBAAIV,UAAU,aAAd,yKAGP,qBAAKA,UAAU,YAAf,SAEIS,EAAKE,KAAI,SAACC,EAAcC,GACpB,OAAO,8BACH,qBAAKb,UAAU,UAAf,SAA0BY,EAAQE,QADrBD,SCRpBE,EAAyB,SAAC,GAAe,IAAdC,EAAa,EAAbA,QACpC,OACI,uBAAOhB,UAAU,aAAaiB,YAAY,gIAA4BC,SAAU,SAACC,GAAD,OAAOH,EAAQG,EAAEb,OAAOc,W,OCOjG,SAASC,IACtB,MAAkCC,mBAASC,GAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAoCH,mBAASE,GAA7C,mBAAOE,EAAP,KAAqBC,EAArB,KACA,EAAwBL,mBAAS,IAAjC,mBAAOM,EAAP,KAAaZ,EAAb,KACA,EAA6BM,mBAAiB,CAC5CnB,UAAU,EACVD,WAAW,EACXE,aAAc,UAHhB,mBAAON,EAAP,KAAgBC,EAAhB,KA+BA,OAJA8B,qBAAU,YArBV,SAAyB/B,GAEvB6B,GAAY,WACV,OACEH,EAAUM,QAAO,SAAAlB,GAAO,OAAIA,EAAQT,WAAaL,EAAQK,UACpDS,EAAQV,YAAcJ,EAAQI,WAC9BU,EAAQR,eAAiBN,EAAQM,mBAgB1C2B,CAAgBjC,GACJ,KAAT8B,GAZL,SAAsBA,GAEpB,IAAII,EAAK,IAAIC,OAAOL,EAAM,MAC1BH,GAAa,SAACG,GACZ,OACEL,EAAKO,QAAO,SAAAlB,GAAO,OAAIA,EAAQE,KAAKoB,MAAMF,SAO9BG,CAAaP,KAC5B,CAAC9B,EAAS8B,IAEX,sBAAK5B,UAAU,YAAf,UACE,cAAC,EAAD,IACA,sBAAKA,UAAU,mBAAf,UACE,cAAC,EAAD,CAASF,QAASA,EAASC,WAAYA,IACvC,gCACE,cAAC,EAAD,CAAOiB,QAASA,IAChB,cAAC,EAAD,CAAWP,KAAMiB,a,MClD3BU,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACjB,EAAD,MAEFkB,SAASC,eAAe,U","file":"static/js/main.47127249.chunk.js","sourcesContent":["import React from 'react'\r\n\r\ntype Filter = any;\r\nexport const Filters: React.FC<Filter> = ({filters, setFilters}) => {\r\n    return (\r\n        <div className=\"filterContainer\">\r\n            <div onClick={() => setFilters({...filters, is_branch: false})}>Юридические лица</div>\r\n            <div onClick={() => setFilters({...filters, is_branch: true})}>Филиалы</div>\r\n            <div onClick={() => setFilters({...filters, inactive: false})}>Действующие</div>\r\n            <div onClick={() => setFilters({...filters, inactive: true})}>Недействующие</div>\r\n            <div onClick={() => setFilters({...filters, company_size: \"large\"})}>Крупные предприятия</div> \r\n            <div onClick={() => setFilters({...filters, company_size: \"medium\"})}>Среднее </div>\r\n            <div onClick={() => setFilters({...filters, company_size: \"small\"})}>Малые </div> \r\n        </div>\r\n    )\r\n}","import React from 'react'\r\n\r\nexport const NavBar: React.FC = () => {\r\n    return (\r\n    <div className=\"navBar\">\r\n      <a className=\"logo\" target=\"#\" href=\"!#\">Djan<span>bolotov</span></a>\r\n      <div className=\"menu\">\r\n        <a className=\"menuLink\" target=\"#\" href=\"https://github.com/djanbolotov16\">Проекты</a>\r\n        <a className=\"menuLink\" target=\"#\" href=\"https://t.me/djanbolotov16\">Мой телеграм</a>\r\n      </div>\r\n    </div>\r\n    )\r\n}","import React from 'react'\r\n\r\ntype Props = any;\r\nexport const Companies: React.FC<Props> = ({data}) => {\r\n        \r\n    if(data.length < 1)\r\n    {\r\n        return <h1 className=\"empty_data\">Нету соответствующих данных(((</h1>\r\n    }\r\n    return (\r\n        <div className=\"companies\">\r\n            {\r\n            data.map((company: any, index: Number | any) => {\r\n                return <div key={index}>\r\n                    <div className=\"company\">{company.name}</div>\r\n                </div>\r\n            })\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\ntype Props = {\r\n    setWord: any\r\n}\r\nexport const Input: React.FC<Props> = ({setWord}) => {\r\n    return (\r\n        <input className=\"input_area\" placeholder=\"Введите любое значение...\" onChange={(e) => setWord(e.target.value)}/>\r\n    )\r\n}","import React, { useEffect, useState } from 'react';\n\nimport {Filters} from './components/Filters';\nimport { NavBar } from './components/Navbar';\nimport { Companies } from './components/Companies';\nimport { Input } from './components/Input';\nimport Data from \"./DATA/companies.json\";\n\ntype Filter = {\n  inactive: boolean,\n  is_branch: boolean,\n  company_size: string,\n};\n\nexport default function App() {\n  const [companies, setCompanies] = useState(Data);\n  const [filteredData, setFiltered] = useState(companies);\n  const [word, setWord] = useState(\"\");\n  const [filters, setFilters]= useState<Filter>({\n    inactive: false,\n    is_branch: false,\n    company_size: \"small\"\n  });\n  \n  function changeCompanies(filters: Filter)\n  {\n    setFiltered(() => {\n      return (\n        companies.filter(company => company.inactive === filters.inactive \n          && company.is_branch === filters.is_branch \n          && company.company_size === filters.company_size)\n      )\n    })\n  }\n\n  function changeFilter(word: string)\n  {\n    let re = new RegExp(word, 'gi')\n    setCompanies((word) => {\n      return (\n        Data.filter(company => company.name.match(re))\n      )\n    }) \n  }\n\n  useEffect(() => {\n    changeCompanies(filters);\n    if(word !== \"\"){changeFilter(word)}\n  }, [filters, word])\n  return (\n    <div className=\"container\">\n      <NavBar/>\n      <div className=\"filterAndCompany\">\n        <Filters filters={filters} setFilters={setFilters}/>\n        <div>\n          <Input setWord={setWord}/>\n          <Companies data={filteredData}/>\n        </div>\n      </div>\n    </div>\n  )\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}